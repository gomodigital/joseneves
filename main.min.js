function accordion() {
  // Open accordion
  var $gridLine = $('.grid-line--diagonal-inverted');

  const $accordionSections = $('.accordion-wrapper');
  $accordionSections.each(function () {
    const $section = $(this);
    const $firstAccordionItem = $section.find('.accordion-item').first();
    $firstAccordionItem.addClass('is-open');
  });

  // Function to check the initial state of the accordion items and hide the grid line if necessary
  function checkAccordionState() {
    if ($('.accordion-item.is-open').length > 0) {
      $gridLine.hide();
    } else {
      $gridLine.show();
    }
  }

  $('.accordion-trigger').on('click', function () {
    $(this).parent('.accordion-item').toggleClass('is-open');
    if ($('.accordion-item.is-open').length > 0) {
      $gridLine.hide();
    } else {
      $gridLine.show();
    }
  });

  checkAccordionState();
}


gsap.registerPlugin(ScrollTrigger);

// Main scroll trigger
function createScrollTrigger(triggerElement, timeline, start = 'top 60%') {
  ScrollTrigger.create({
    trigger: triggerElement,
    start: start,
    markers: false,
    onEnter: () => timeline.play(),
    onLeaveBack: () => timeline.reverse(),
  });
}

let headingsToSplit = $('.hero-slider_content .heading_xlarge, .hero_heading .heading_xlarge, .product-hero_header .heading_large, .highlight_content .heading_large, .section_intro .heading_xlarge, .section_intro .heading_large, .home-footer_block .heading_large, .partners_intro .heading_large');
let typeSplit = new SplitType(headingsToSplit, { // eslint-disable-line
  types: 'words, chars',
  tagName: 'span',
});

function animateLines() {
  $('.grid-line--vertical').each(function () {
    let tl = gsap.timeline({ paused: true });
    tl.from($(this), { height: 0, duration: 1, ease: 'back.out(2)' });
    ScrollTrigger.create({
      trigger: $(this),
      start: 'top 20%',
      markers: false,
      onEnter: () => tl.play(),
    });
  });
  $('.grid-line--horizontal').each(function () {
    let tl = gsap.timeline({ paused: true });
    tl.from($(this), { width: 0, duration: 1, ease: 'back.out(2)' });
    ScrollTrigger.create({
      trigger: $(this),
      start: 'top bottom',
      markers: false,
      onEnter: () => tl.play(),
    });
  });
}

function animateMap() {
  const mapInfo = $('#map-info');
  const links = $('.partners-map_nav-link');

  // set the initial selected link
  let selectedLink = $('#trigger-candidates');

  // set the initial circle scale and opacity to 0
  mapInfo.find('circle').each(function () {
    $(this).attr('opacity', '0');
    gsap.set(this, { scale: 0, opacity: 0, transformOrigin: 'center center' });
  });

  // add click event listeners to the link elements
  links.on('click', function () {
    // get the target group ID from the link block ID
    const targetId = $(this).attr('id').replace('trigger-', '');
    // get the target group element in the SVG
    const targetGroup = mapInfo.find(`#${targetId}`);
    // get all the circles in the SVG
    const circles = targetGroup.find('circle');
    // loop through the circles and set their opacity and scale based on the target group
    const timeline = gsap.timeline({ paused: true });
    circles.each(function (index) {
      // set the opacity and scale to 1 for the circle with a delay
      timeline.fromTo(this, { opacity: 0, scale: 0 }, { duration: 0.25, opacity: 1, scale: 1, ease: 'power4.out', delay: index * 0.01 }, 0);
    });

    // play the timeline
    timeline.play();

    // reset the opacity and scale for all circles in other groups
    mapInfo
      .find('circle')
      .not(circles)
      .each(function () {
        gsap.to(this, { duration: 0.5, opacity: 0, scale: 0, ease: 'power4.out' });
      });

    // remove the 'selected' class from the previously selected link
    selectedLink.removeClass('selected');

    // add the 'selected' class to the current link
    $(this).addClass('selected');

    // set the current link as the selected link
    selectedLink = $(this);
  });

  // trigger the click event on the initial selected link
  selectedLink.click();
}

function animateMenu() {
  const mainMenuItems = $('.nav-primary_item');
  const secondaryMenuItems = $('.nav-secondary_item');
  const closeButton = $('#main-menu-close');
  const navLogoBackground = $('.nav_logo-bg');
  const languageButton = $('.button-language');
  let tl = gsap.timeline();
  tl.from(navLogoBackground, { duration: 1, opacity: 0, scale: 0, ease: 'power4.out' }, 0);
  tl.from(languageButton, { duration: 0.5, y: -20, ease: 'power4.out' }, 0);
  tl.from(secondaryMenuItems, { duration: 0.5, opacity: 0, y: -20, stagger: 0.1, ease: 'power4.out' }, 0);
  tl.from(mainMenuItems, { duration: 0.5, opacity: 0, y: -20, stagger: 0.1, ease: 'power4.out' }, 0.4);
  tl.from(closeButton, { duration: 0.5, opacity: 0, ease: 'power4.out' }, 1);
}

function offsetMenuButton() {
  const menuButton = $('#main-menu-button');
  let tl = gsap.timeline();
  tl.to(menuButton, { duration: 0.5, opacity: 0, yPercent: -100, ease: 'power4.out' }, 0);
}

function resetMenuButton() {
  const menuButton = $('#main-menu-button');
  let tl = gsap.timeline();
  tl.to(menuButton, { duration: 0.5, opacity: 1, yPercent: 0, ease: 'power4.out' }, 0);
}

let tlHero = gsap.timeline({ defaults: { opacity: 0, duration: 0.5, ease: 'back.out(2)' } });

function animateHeroSection() {
  let heroContainer = $('.section_hero'); // eslint-disable-line
  let heading = $('.section_hero .heading_xlarge');
  let intro = $('.section_hero .text_large');
  let cta = $('.section_hero .cta-group');
  let playButton = $('.section_hero .hero_play-button');
  let headingSplit = new SplitType(heading, { // eslint-disable-line
    types: 'words, chars',
    tagName: 'span',
  });
  let char = heading.find('.char');
  gsap.set(heroContainer, { autoAlpha: 0 });
  tlHero.to(heroContainer, { autoAlpha: 1 });
  tlHero.from(char, { yPercent: 100, stagger: { amount: 0.25 } }, '+=2');
  tlHero.from(intro, { y: 20 }, '-=1');
  tlHero.from(cta, { y: 20 }, '-=0.5');
  if (playButton.length > 0) {
    tlHero.from(playButton, { y: 20 }, '-=0.5');
  }
}

let tlProductHero = gsap.timeline({ defaults: { opacity: 0, duration: 0.5, ease: 'back.out(2)' } });

function animateProductHero() {
  let heroContainer = $('.section_product-hero');
  let heading = $('.section_product-hero .heading_large');
  let intro = $('.section_product-hero .text_large');
  let cta = $('.section_product-hero .cta-group');
  let image = $('.section_product-hero .product-hero_image');
  let caption = $('.section_product-hero .text_small-caps');
  let headingSplit = new SplitType(heading, { // eslint-disable-line
    types: 'words, chars',
    tagName: 'span',
  });
  let char = heading.find('.char');
  // let tl = gsap.timeline({ defaults: { opacity: 0, duration: 0.5, ease: 'back.out(2)' } });
  gsap.set(heroContainer, { autoAlpha: 0 });
  tlProductHero.to(heroContainer, { autoAlpha: 1 });
  tlProductHero.from(char, { yPercent: 100, stagger: { amount: 0.25 } });
  tlProductHero.from(intro, { y: 20 });
  tlProductHero.from(cta, { y: 20 });
  tlProductHero.from(image, { clipPath: 'circle(0%)', scale: 1.1, duration: 1 });
  tlProductHero.from(caption, { y: 20 });
}

function animateIntroSection() {
  $('.section_intro').each(function () {
    let headingXLarge = $(this).find('.heading_xlarge');
    let headingLarge = $(this).find('.heading_large');
    let mainText = $(this).find('.intro_main-text');
    let cta = $(this).find('.intro_cta');
    let tl = gsap.timeline({ paused: true });
    // if .heading_xlarge, animate it
    if (headingXLarge.length > 0) {
      tl.from(headingXLarge.find('.char'), { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } });
      gsap.set(headingXLarge, { opacity: 1 });
    }
    // if .heading_large, animate it
    if (headingLarge.length > 0) {
      tl.from(headingLarge.find('.char'), { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } });
      gsap.set(headingLarge, { opacity: 1 });
    }
    // if .intro_main-text, animate it
    if (mainText.length > 0) {
      tl.from(mainText, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)', stagger: 0.5 });
    }
    // if .intro_cta, animate it
    if (cta.length > 0) {
      tl.from(cta, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    }
    createScrollTrigger($(this), tl);
  });
}

function animate3HighlightsSection() {
  $('.section_3-highlights').each(function () {
    let image = $(this).find('.highlight-item_image');
    let heading = $(this).find('.heading_medium');
    let button = $(this).find('.button');
    let text = $(this).find('.rich-text');
    let tl = gsap.timeline({ paused: true });
    // if .highlight-item_image, animate it
    if (image.length > 0) {
      tl.from(image, { clipPath: 'circle(0%)', scale: 1.5, duration: 1, ease: 'back.out(2)' });
    }
    // if .heading_medium, animate it
    if (heading.length > 0) {
      tl.from(heading, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    }
    // if .rich-text, animate it
    if (text.length > 0) {
      tl.from(text, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    }
    // if .button, animate it
    if (button.length > 0) {
      tl.from(button, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    }
    createScrollTrigger($(this), tl);
  });
}

function animateHighlightSection() {
  $('.section_highlight').each(function () {
    let image = $(this).find('.highlight_image');
    let playButton = $(this).find('.play-button');
    let heading = $(this).find('.heading_large');
    let text = $(this).find('.highlight_content-text');
    let cta = $(this).find('.cta-group');
    let keyNumbers = $(this).find('.highlight_key-numbers-item');
    let ctaCard = $(this).find('.cta-card');
    let tl = gsap.timeline({ paused: true });
    // if content, animate it
    tl.from($(this), { opacity: 0, y: 200, duration: 1, ease: 'back.out(2)' });
    // if .highlight_image, animate it
    if (image.length > 0) {
      tl.from(image, { clipPath: 'polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)', duration: 1, ease: 'back.out(2)' });
    }
    // if heading_large, animate it
    if (heading.length > 0) {
      tl.from(heading.find('.char'), { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } }, '-=1');
      gsap.set(heading, { opacity: 1 });
    }
    // if play-button, animate it
    if (playButton.length > 0) {
      tl.from(playButton, { opacity: 0, scale: 1.2, duration: 0.25 }, '-=0.5');
    }
    // if .highlight_content-text, animate it
    if (text.length > 0) {
      tl.from(text, { opacity: 0, y: 20, duration: 0.25, ease: 'back.out(2)' });
    }
    // if .cta-group, animate it
    if (cta.length > 0) {
      tl.from(cta, { opacity: 0, y: 20, duration: 0.25, ease: 'back.out(2)' });
    }
    // if .highlight_key-numbers-item, animate it
    if (keyNumbers.length > 0) {
      tl.from(keyNumbers, { opacity: 0, y: 20, duration: 0.25, ease: 'back.out(2)', stagger: 0.2 });
    }
    // if .cta-card, animate it
    if (ctaCard.length > 0) {
      tl.from(ctaCard, { opacity: 0, y: 20, duration: 0.25, ease: 'back.out(2)', stagger: 0.2 });
    }
    createScrollTrigger($(this), tl);
  });
}

function animateAccordionItems() {
  $('.section_accordion').each(function () {
    let accordionItems = $(this).find('.accordion-item');
    let tl = gsap.timeline({ paused: true });
    // if accordion-items, animate them
    if (accordionItems.length > 0) {
      tl.from(accordionItems, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)', stagger: 0.5 });
    }
    createScrollTrigger(accordionItems, tl);
  });
}

function animateProductGrid() {
  $('.product-grid_container').each(function () {
    let productGridItems = $(this).find('.product-grid_item');
    let tl = gsap.timeline({ paused: true });
    // if product-grid_items, animate them
    if (productGridItems.length > 0) {
      tl.from(productGridItems, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)', stagger: 0.5 });
    }
    createScrollTrigger(productGridItems, tl);
  });
}

function animateFeaturedArticles() {
  $('.section_home-featured, .section_home-career-tips').each(function () {
    let card = $(this).find('.article-card');
    let tl = gsap.timeline({ paused: true });
    tl.from(card, { opacity: 0, y: 20, duration: 1, ease: 'back.out(2)', stagger: 0.5 });
    createScrollTrigger($(this), tl);
  });
}

function animatePartners() {
  $('.section_home-partners').each(function () {
    let heading = $(this).find('.heading_large');
    let intro = $(this).find('.partners_intro-content');
    let cta = $(this).find('.cta-group');
    let mapNavLink = $(this).find('.partners-map_nav-link');
    let mapBackground = $(this).find('.partners-map_background');
    let map = $(this).find('.partners-map_images-circles');
    let partners = $(this).find('.partners-slider');
    let tl = gsap.timeline({ paused: true });
    tl.from(mapBackground, { opacity: 0, duration: 0.5 }, '+=0.25');
    tl.from(heading.find('.char'), { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } });
    gsap.set(heading, { opacity: 1 });
    tl.from(intro, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    tl.from(cta, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    tl.from(map, { opacity: 0, duration: 0.5, ease: 'back.out(2)' });
    tl.from(mapNavLink, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)', stagger: 0.5 }, '-=0.5');
    tl.from(partners, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' });
    createScrollTrigger($(this), tl);
  });
}

function animateHomeFooter() {
  $('.home-footer').each(function () {
    let heading = $(this).find('.heading_large');
    let subHeading = $(this).find('.heading_medium');
    let menuItems = $(this).find('.home-footer_link');
    let copyright = $(this).find('.home-footer_copyright');
    let social = $(this).find('.footer_social');
    let tl = gsap.timeline({ paused: true });
    tl.from(heading.find('.char'), { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } });
    gsap.set(heading, { opacity: 1 });
    tl.from(subHeading, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' }, 0.5);
    tl.from(social, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' }, '-=0.5');
    tl.from(menuItems, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)', stagger: 0.1 }, '-=0.5');
    tl.from(copyright, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' }, '-=0.5');
    createScrollTrigger($(this), tl);
  });
}


function faqs() {
  const $faqNav = $('.faq-nav');
  const $faqSections = $('.faq-section');

  $faqSections.each(function () {
    const $section = $(this);
    const $id = $section.find('.faq-group_slug').val();
    const $handle = $section.find('.faq-group_menu-handle').val();

    $section.attr('id', $id);
    $faqNav.append('<a href="#' + $id + '" class="faq-nav_link">' + $handle + '</a>');
    const $firstAccordionItem = $section.find('.faq-accordion_item').first();
    $firstAccordionItem.addClass('is-open');
  });

  const $navLinks = $faqNav.find('.faq-nav_link');
  $navLinks.removeClass('w--current');

  const currentHash = window.location.hash;
  if (currentHash) {
    $navLinks.each(function () {
      const $link = $(this);
      if ($link.attr('href') === currentHash) {
        $link.addClass('w--current');
      }
    });
  }

  // Add click event listeners to each link in the navigation bar
  $navLinks.click(function () {
    $navLinks.removeClass('w--current'); // Remove the w--current class from all links
    $(this).addClass('w--current'); // Add the w--current class to the clicked link
  });

  const $faqWrapper = $('.faq-group_collection-wrapper');
  const faqNavHeight = $faqNav.outerHeight();
  $faqWrapper.css('margin-top', -faqNavHeight);

  $('.faq-accordion_trigger').on('click', function () {
    $(this).parent('.faq-accordion_item').toggleClass('is-open');
  });
}


function library() {
  const searchInput = $('#library-search_input');
  const searchReset = $('#library-search_reset');
  const searchSubmit = $('#library-search_submit');
  const featuredArticles = $('.library-articles.is-featured');
  const filterTrigger = $('.jetboost-filter-trigger');
  const typesClear = $('.library-types_clear');

  // Set input type to "search" on page load
  searchInput.attr('type', 'search');
  searchReset.hide();

  // Check if there are any query parameters on page load
  const searchParams = new URLSearchParams(window.location.search);
  if (searchInput.val().length > 0 || searchParams.toString().length > 0) {
    hideFeaturedArticles();
    searchReset.show();
    searchSubmit.hide();
  } else {
    showFeaturedArticles();
    searchSubmit.show();
  }

  if (filterTrigger.hasClass('jetboost-filter-active')) {
    hideFeaturedArticles();
  } else {
    showFeaturedArticles();
  }

  // Show featured articles when filter is clicked
  filterTrigger.on('click', function () {
    if ($(this).hasClass('jetboost-filter-active')) {
      hideFeaturedArticles();
    } else {
      showFeaturedArticles();
    }
  });

  // Show featured articles when clear button is clicked
  typesClear.on('click', function () {
    if (searchInput.val().length === 0) {
      showFeaturedArticles();
    }
  });

  // Fade in search reset button when typing
  searchInput.on('input', () => {
    if (searchInput.val().length > 0) {
      hideFeaturedArticles();
      searchReset.show();
      searchSubmit.hide();
    } else {
      showFeaturedArticles();
      searchReset.hide();
      searchSubmit.show();
    }
  });

  // Clear search input and fade out reset button when reset button is clicked
  searchReset.on('click', () => {
    showFeaturedArticles();
    searchReset.hide();
    searchSubmit.show();
  });

  // Show featured articles
  function showFeaturedArticles() {
    if (featuredArticles.length > 0) {
      featuredArticles.show();
    }
  }

  // Hide featured articles
  function hideFeaturedArticles() {
    if (featuredArticles.length > 0) {
      featuredArticles.hide();
    }
  }
}


function videoModals() {
  // Video modals
  const modalVideo = $('.modal-video');
  const closeButton = modalVideo.find('.button-close');
  modalVideo.detach().appendTo('body');

  $(document).on('click', 'a[href^="#modal-video-"]', function (e) {
    e.preventDefault();
    const target = $(this).attr('href');
    $(target).addClass('is-open');
    $('body').addClass('no-scroll');
    offsetMenuButton();
    history.replaceState({}, document.title, window.location.href.split('#')[0]);
    const video = $(target).find('.modal-video_player');
    video[0].play();
  });

  closeButton.on('click', function (e) {
    e.preventDefault();
    resetMenuButton();
    const modalVideo = $(this).closest('.modal-video');
    modalVideo.removeClass('is-open');
    $('body').removeClass('no-scroll');
    const video = $(this).closest('.modal-video').find('.modal-video_player');
    // Pause the video
    video[0].pause();
    // Reset the video to the beginning
    video[0].currentTime = 0;
  });
}

// export function modals() {
//   // Normal modals
//   const modal = $('.modal');
//   modal.detach().appendTo('body');

//   $(document).on('click', 'a[href^="#modal-"]', function (e) {
//     e.preventDefault();
//     const target = $(this).attr('href');
//     $(target).addClass('is-open');
//     $('body').addClass('no-scroll');
//     // history.replaceState({}, document.title, window.location.href.split('#')[0]);
//   });

//   $('.modal_close').on('click', function (e) {
//     e.preventDefault();
//     const modal = $(this).closest('.modal');
//     modal.removeClass('is-open');
//     $('body').removeClass('no-scroll');
//   });

//   function showElementByHash(hash) {
//     if (window.location.hash === hash) {
//       const element = $(hash);
//       if (element.length) {
//         element.addClass('is-open');
//         $('body').addClass('no-scroll');
//       }
//     }
//   }

//   $(document).ready(() => {
//     showElementByHash('#download');

//     $(window).on('hashchange', () => {
//       showElementByHash('#download');
//     });
//   });
// }

function modals() {
  // Normal modals
  const modal = $('.modal');
  modal.detach().appendTo('body');

  // $(document).on('click', 'a[href^="#"]', function (e) {
  //   const target = $(this).attr('href');
  //   const targetModal = $(target);

  //   if (targetModal.hasClass('modal')) {
  //     e.preventDefault();
  //     targetModal.addClass('is-open');
  //     $('body').addClass('no-scroll');
  //   }
  // });
  $(document).on('click', 'a[href^="#"]', function (e) {
    const target = $(this).attr('href');

    if (target !== '#') {
      const targetModal = $(target);

      if (targetModal.hasClass('modal')) {
        e.preventDefault();
        targetModal.addClass('is-open');
        $('body').addClass('no-scroll');
      }
    }
  });

  $('.modal_close').on('click', function (e) {
    e.preventDefault();
    const modal = $(this).closest('.modal');
    modal.removeClass('is-open');
    $('body').removeClass('no-scroll');
  });

  function showElementByHash(hash) {
    const element = $(hash);
    if (element.length && element.hasClass('modal')) {
      element.addClass('is-open');
      $('body').addClass('no-scroll');
    }
  }

  $(document).ready(() => {
    showElementByHash(window.location.hash);

    $(window).on('hashchange', () => {
      showElementByHash(window.location.hash);
    });
  });
}


function sliderHomeHero() {
  const homeHeroSlider = new Splide('.hero-slider', {
    type: 'loop',
    // rewind: true,
    // pagination: false,
    autoplay: true,
    interval: 6000,
  }).mount();

  // Animate the initial visible slide
  setTimeout(() => {
    animateSlide(homeHeroSlider.Components.Elements.slides[homeHeroSlider.index]);
  }, 50);

  homeHeroSlider.on('active', (slide) => {
    animateSlide(slide.slide);
  });

  homeHeroSlider.on('inactive', (slide) => {
    resetAnimation(slide.slide);
  });

  function animateSlide(slide) {
    const slideId = slide.dataset.slideId;
    let slideContainer = slide.querySelector('.hero-slider_container');
    let heading = slide.querySelector('.heading_xlarge');
    let headingSplit = new SplitType(heading, { // eslint-disable-line
      types: 'words, chars',
      tagName: 'span',
    });
    let char = slide.querySelectorAll('.char');
    let intro = slide.querySelector('.hero-slider_intro');
    let cta = slide.querySelector('.button');
    let imageContainer = slide.querySelector('.hero-slider_image-container');
    let image = slide.querySelector('.hero-slider_image');
    let tl = gsap.timeline();
    if (!slide.animation) {
      tl.from(slideContainer, { autoAlpha: 0 });
      tl.from(char, { opacity: 0, yPercent: 100, duration: 0.5, ease: 'back.out(2)', stagger: { amount: 0.25 } });
      tl.from(intro, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' }, '-=0.5');
      tl.from(cta, { opacity: 0, y: 20, duration: 0.5, ease: 'back.out(2)' }, '-=0.5');
      tl.from(imageContainer, { clipPath: 'circle(0%)', duration: 1.5, ease: 'back.out(2)' }, '-=1.5');
      tl.from(image, { scale: 2, duration: 1.5, ease: 'power4.out' }, '-=1.5');
    } else {
      slide.animation[slideId].progress(0).play();
    }
    slide.animation = slide.animation || {};
    slide.animation[slideId] = tl;
  }

  function resetAnimation(slide) {
    const slideId = slide.dataset.slideId;
    if (slide.animation && slide.animation[slideId]) {
      slide.animation[slideId].progress(0).pause(); // Restart the stored animation
    }
  }
}

function sliderHomePrograms() {
  const programSlider = new Splide('.programs-slider', {
    type: 'loop',
    perPage: 5,
    perMove: 1,
    gap: '.5rem',
    pagination: false,
    autoplay: true,
    interval: 5000,
    breakpoints: {
      568: {
        perPage: 2,
      },
    },
  });

  programSlider.mount();
}

function sliderHomePartners() {
  const partnersSlider = new Splide('.partners-slider', {
    type: 'loop',
    rewind: true,
    perPage: 6,
    perMove: 1,
    gap: '1.5rem',
    pagination: false,
    breakpoints: {
      568: {
        perPage: 3,
      },
    },
  });

  partnersSlider.mount();
}


// @codekit-prepend './modules/accordion.js'
// @codekit-prepend './modules/animations.js'
// @codekit-prepend './modules/faqs.js'
// @codekit-prepend './modules/library.js'
// @codekit-prepend './modules/modals.js'
// @codekit-prepend './modules/sliders.js'

const currentYear = new Date().getFullYear();
const accordionElements = $('.accordion-wrapper');
const faqsSection = $('.section_faqs');
const videoModalsElements = $('.modal-video');
const modalsElements = $('.modal');
const mapPartners = $('.section_home-partners');
const heroSlider = $('.hero-slider');
const programsSlider = $('.programs-slider');
const partnersSlider = $('.partners-slider');
const menuButton = $('#main-menu-button');
const closeMenu = $('#main-menu-close');
const nav = $('.nav_wrapper');
const languageButton = $('.button-language');
const libraryLink = $('.arrow-button.is-library-link');
const libraryLinkContainer = $('.featured-articles_container');
const newsletterCTA = $('.newsletter-cta.is-home');

document.addEventListener('DOMContentLoaded', function () {
  // TOREMOVE
  $('a').each(function () {
    var old_url = $(this).attr('href');
    var current_domain = document.location.hostname;
    // Check if old_url is not undefined
    if (old_url) {
      // Replace all occurrences of "https://joseneves.org/" and "https://www.joseneves.org/" with the current hostname
      if (old_url.includes("https://joseneves.org/") || old_url.includes("https://www.joseneves.org/")) {
        var new_url = old_url.replace(/https:\/\/(www\.)?joseneves.org\//, "https://" + current_domain + "/");
        $(this).attr('href', new_url);
      }
    }
  });

  // Set the current year in the footer
  $('.copyright-year').text(currentYear);
  // Open external links in a new tab
  $('a[href^="http"]:not([href*="' + window.location.hostname + '"])').attr('target', '_blank');

  if ($(window).width() < 478) {
    libraryLink.detach().insertAfter(libraryLinkContainer);
    libraryLink.css('padding-left', '1.5rem');
    newsletterCTA.detach().insertAfter(libraryLink);
    newsletterCTA.css('margin', '2rem 0 0 0');
  }

  menuButton.on('click', function (e) {
    e.preventDefault();
    nav.fadeIn(100);
    $('body').addClass('no-scroll');
    animateMenu();
  });

  closeMenu.on('click', function (e) {
    e.preventDefault();
    nav.fadeOut(100);
    $('body').removeClass('no-scroll');
  });

  languageButton.on('click', function (e) {
    e.preventDefault();
    let url = $(this).attr('href');
    let innerCircle = $(this).find('.button-language_switch-circle');
    innerCircle.css('transform', 'translateX(100%)');
    setTimeout(function () {
      window.location.href = url;
    }, 500);
  });

  if (accordionElements.length > 0) {
    accordion();
  }
  
  if (faqsSection.length > 0) {
    faqs();
  }
  
  // if body has class 'library', run library function
  if ($('body').hasClass('library')) {
    library();
  }
  
  if (videoModalsElements.length > 0) {
    videoModals();
  }
  
  if (modalsElements.length > 0) {
    modals();
  }
  
  if (mapPartners.length > 0) {
    animateMap();
  }
  
  if (partnersSlider.length > 0) {
    sliderHomePartners();
  }

  if (programsSlider.length > 0) {
    sliderHomePrograms();
  }

  if (heroSlider.length > 0) {
    sliderHomeHero();
  }

  if ($('.section_hero').length > 0) {
    animateHeroSection();
  }

  if ($('.section_product-hero').length > 0) {
    animateProductHero();
  }

  if ($('.section_intro').length > 0) {
    animateIntroSection();
  }

  if ($('.section_3-highlights').length > 0) {
    animate3HighlightsSection();
  }

  if ($('.section_highlight').length > 0) {
    animateHighlightSection();
  }

  if ($('.section_accordion').length > 0) {
    animateAccordionItems();
  }

  if ($('.section_product-grid').length > 0) {
    animateProductGrid();
  }

  if ($('.section_home-featured').length > 0 || $('.section_home-career-tips').length > 0) {
    animateFeaturedArticles();
  }

  if ($('.section_home-partners').length > 0) {
    animatePartners();
  }

  if ($('.home-footer').length > 0) {
    animateHomeFooter();
  }

});  